<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-3.1.xsd">

    <!--导入配置文件-->
    <context:property-placeholder location="classpath:resources.properties, classpath:pay-config.properties"/>

    <!-- MVC扫描 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.bisa.health.shiro.web.bind.CurrentUserResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 开启controller注解支持 -->
   	<!-- 开启controller注解支持 -->
	<context:component-scan base-package="com.bisa.health.**.controller"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.RestController" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

    <!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"/>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- welcome-file-list不写东西 web服务器就知道，根路径不要web服务器来处理，而是由程序自身来处理 找/index这个路径为默认的路径 -->
    <mvc:view-controller path="/" view-name="index"/>

    <!--上传文件配置-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000000"></property>
    </bean>

    <!-- 国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <!-- 表示多语言配置文件在根路径下，以lang开头的文件-->
        <property name="basenames">
            <list>
                <value>lang/lang</value>
            </list>
        </property>
    </bean>

    <!-- 配置SessionLocaleResolver用于将Locale对象存储于Session中供后续使用 默认是繁体 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
        <property name="defaultLocale" value="zh_hk"></property>
    </bean>

    <!-- 配置LocaleChangeInterceptor 主要用于获取请求中的locale信息，将期转为Locale对像，获取LocaleResolver对象 -->
    <mvc:interceptors>
        <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <!--lang是前台切换语言的时候的参数名字-->
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

    <!-- 全局异常配置 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error/error.jsp</prop>
                <prop key="java.lang.Throwable">error/error.jsp</prop>
            </props>
        </property>
        <property name="statusCodes">
            <props>
                <prop key="500">500</prop>
            </props>
        </property>
        <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->
        <property name="warnLogCategory" value="WARN"></property>
        <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->
        <property name="defaultErrorView" value="500"></property>
        <!-- 默认HTTP状态码 -->
        <property name="defaultStatusCode" value="500"></property>
    </bean>

    <import resource="spring-mvc-shiro.xml"/>
 	<import resource="spring-client-service.xml"/>
</beans>
